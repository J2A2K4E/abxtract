# Python 3
# import simplejson as json
# import oauth2
import time
import json
import os
import requests
from datetime import datetime, date, timedelta

import gluon.contrib.simplejson as json
import oauth2

CONSUMER_KEY = '2972187968-JmUT3zeu2UyVIw315arct0tFjFO0J92r5ozwE1W'
CONSUMER_SECRET = 'FLqXC5f1UGUX4AwaKURWNDSUrB2FkRDajZemus9TKWhwY'
ACCESS_KEY = 'Z0ITlc1Fp5fAjZmX1ks8OzM2j'
ACCESS_SECRET = 'aLqR5uoV2vLLHCkIFmej3R43WGrqrfluZAguHuRRq0Xk8ScDBa'

def get_old_tweets():
    consumer = oauth2.Consumer(key=ACCESS_KEY, secret=ACCESS_SECRET)
    token = oauth2.Token(key=CONSUMER_KEY, secret=CONSUMER_SECRET)
    client = oauth2.Client(consumer, token)

    symbolList = ["LTC", "ETH", "XMR"]
    searchTermList = ['litecoin', 'ethereum', 'monero']

    for i in range(3):
        symbol = symbolList[i]
        searchTerm = searchTermList[i]
        url = "https://api.twitter.com/1.1/search/tweets.json?q="+searchTerm+"&result_type=recent&count=100&lang=en"
        page_count = 1
        max_page_count = 50
        attempt_count = 1
        max_attempt_count = 5
        breaker = False
        while((page_count <= max_page_count)&(attempt_count <= max_attempt_count)&(breaker == False)):
            time.sleep(5) # Set time lag
            resp, content = client.request(url, method="GET", headers=None)
            try:
                tweets = json.loads(content)
                next_results = tweets['search_metadata']['next_results']
                url = "https://api.twitter.com/1.1/search/tweets.json"+next_results

                tweet_statuses = tweets['statuses']
                for line in tweet_statuses:
                    if breaker == False and db(db.tweet.tweet_id == line['id']).select():
                        breaker = True

                    db.tweet.update_or_insert((db.tweet.tweet_id == line['id']),
                                              tweet_id = line['id'],
                                              coin_symbol = symbol,
                                              body = line['text'],
                                              created_at = time.strftime('%Y-%m-%d %H:%M:%S', time.strptime(line['created_at'],'%a %b %d %H:%M:%S +0000 %Y')),
                                              retweet_count = line['retweet_count'],
                                              favorite_count = line['favorite_count'],
                                              user_id = line['user']['id'],
                                              user_followers_count = line['user']['followers_count'])
                    db.commit()

                page_count += 1
                attempt_count = 1
                print(symbol+str(page_count))
                print(url)
            except:
                attempt_count += 1
    return 'success'
